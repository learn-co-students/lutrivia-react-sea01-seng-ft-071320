{"ast":null,"code":"var _jsxFileName = \"/home/afteralec/dev/flatiron/module-4/addl-practice/lutrivia-react/lutrivia/src/components/Trivia.jsx\";\nimport React, { Component } from \"react\";\nimport Question from \"./Question\";\n\nclass Trivia extends Component {\n  constructor(props) {\n    super();\n\n    this.handleClick = event => {\n      console.log(\"Click registered!\");\n      console.log(event.target);\n    };\n\n    this.state = {\n      questions: [...props.questions],\n      next: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"flex flex-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.questions.map(question => !!question.answered ? React.createElement(Question, Object.assign({}, question, {\n      key: question.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })) : null), React.createElement(Question, Object.assign({}, this.state.questions[this.state.next], {\n      key: this.state.questions[this.state.next].text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Trivia;","map":{"version":3,"sources":["/home/afteralec/dev/flatiron/module-4/addl-practice/lutrivia-react/lutrivia/src/components/Trivia.jsx"],"names":["React","Component","Question","Trivia","constructor","props","handleClick","event","console","log","target","state","questions","next","render","map","question","answered","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAQnBC,WARmB,GAQJC,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CAAC,GAAGP,KAAK,CAACO,SAAV,CADA;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAODC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,GAArB,CAA0BC,QAAD,IACxB,CAAC,CAACA,QAAQ,CAACC,QAAX,GACE,oBAAC,QAAD,oBAAcD,QAAd;AAAwB,MAAA,GAAG,EAAEA,QAAQ,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAEI,IAHL,CADH,EAOE,oBAAC,QAAD,oBACM,KAAKP,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,IAAhC,CADN;AAEE,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,IAAhC,EAAsCK,IAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF,CADF;AAcD;;AA7B4B;;AAgC/B,eAAef,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Question from \"./Question\";\n\nclass Trivia extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      questions: [...props.questions],\n      next: 0,\n    };\n  }\n\n  handleClick = (event) => {\n    console.log(\"Click registered!\");\n    console.log(event.target);\n  };\n\n  render() {\n    return (\n      <div className=\"flex flex-col\">\n        {this.state.questions.map((question) =>\n          !!question.answered ? (\n            <Question {...question} key={question.text} />\n          ) : null\n        )}\n\n        <Question\n          {...this.state.questions[this.state.next]}\n          key={this.state.questions[this.state.next].text}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Trivia;\n"]},"metadata":{},"sourceType":"module"}