{"ast":null,"code":"var _jsxFileName = \"/home/afteralec/dev/flatiron/module-4/addl-practice/lutrivia-react/lutrivia/src/components/App.jsx\";\nimport React, { Component } from \"react\";\nimport Question from \"./Question\";\nimport AnsweredQuestion from \"./AnsweredQuestion\";\nimport \"./App.css\";\nimport data from \"../data\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [...data.questions],\n      current: 0,\n      score: 0\n    };\n\n    this.score = () => {\n      const score = this.state.score + 1;\n      this.setState({\n        score: score\n      });\n    };\n\n    this.newGame = () => {\n      this.setState({\n        questions: [...data.questions],\n        current: 0,\n        score: 0\n      });\n    };\n\n    this.answerQuestion = (id, answer) => {\n      // Find the question answered\n      const question = this.state.questions.find(question => question.id === id); // Mutate this question with the user's response\n\n      question.response = answer;\n\n      if (answer === question.answer) {\n        this.props.score();\n      } // Move to the next question\n\n\n      const next = this.state.current + 1;\n      this.setState({\n        current: next\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(\"div\", {\n      className: \"flex flex-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.newGame,\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Score: \", this.state.score)), React.createElement(\"div\", {\n      className: \"flex flex-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.questions.map((question, i) => !!(i < this.state.current) ? React.createElement(AnsweredQuestion, Object.assign({}, question, {\n      key: question.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : null), !!this.state.questions[this.state.current] ? React.createElement(Question, Object.assign({}, this.state.questions[this.state.current], {\n      answerQuestion: this.answerQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })) : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/afteralec/dev/flatiron/module-4/addl-practice/lutrivia-react/lutrivia/src/components/App.jsx"],"names":["React","Component","Question","AnsweredQuestion","data","App","state","questions","current","score","setState","newGame","answerQuestion","id","answer","question","find","response","props","next","render","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Question from \"./Question\";\nimport AnsweredQuestion from \"./AnsweredQuestion\";\nimport \"./App.css\";\n\nimport data from \"../data\";\n\nclass App extends Component {\n  state = {\n    questions: [...data.questions],\n    current: 0,\n    score: 0,\n  };\n\n  score = () => {\n    const score = this.state.score + 1;\n    this.setState({\n      score: score,\n    });\n  };\n\n  newGame = () => {\n    this.setState({\n      questions: [...data.questions],\n      current: 0,\n      score: 0,\n    });\n  };\n\n  answerQuestion = (id, answer) => {\n    // Find the question answered\n    const question = this.state.questions.find(\n      (question) => question.id === id\n    );\n\n    // Mutate this question with the user's response\n    question.response = answer;\n\n    if (answer === question.answer) {\n      this.props.score();\n    }\n\n    // Move to the next question\n    const next = this.state.current + 1;\n    this.setState({\n      current: next,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Lutrivia</h1>\n        <div className=\"flex flex-between\">\n          <button onClick={this.newGame} className=\"btn\">\n            New Game\n          </button>\n          <h2>Score: {this.state.score}</h2>\n        </div>\n        <div className=\"flex flex-col\">\n          {this.state.questions.map((question, i) =>\n            !!(i < this.state.current) ? (\n              <AnsweredQuestion {...question} key={question.id} />\n            ) : null\n          )}\n\n          {!!this.state.questions[this.state.current] ? (\n            <Question\n              {...this.state.questions[this.state.current]}\n              answerQuestion={this.answerQuestion}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}